// Code generated by protoc-gen-go.
// source: locationservice.proto
// DO NOT EDIT!

/*
Package locationservice is a generated protocol buffer package.

It is generated from these files:
	locationservice.proto

It has these top-level messages:
	Point
	User
*/
package locationservice

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// A point is a pair of latitude and longitude
type Point struct {
	Latitude  int32 `protobuf:"varint,1,opt,name=latitude" json:"latitude,omitempty"`
	Longitude int32 `protobuf:"varint,2,opt,name=longitude" json:"longitude,omitempty"`
}

func (m *Point) Reset()                    { *m = Point{} }
func (m *Point) String() string            { return proto.CompactTextString(m) }
func (*Point) ProtoMessage()               {}
func (*Point) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type User struct {
	UserID int32 `protobuf:"varint,1,opt,name=userID" json:"userID,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func init() {
	proto.RegisterType((*Point)(nil), "Point")
	proto.RegisterType((*User)(nil), "User")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for LocationService service

type LocationServiceClient interface {
	TrackUser(ctx context.Context, in *User, opts ...grpc.CallOption) (LocationService_TrackUserClient, error)
}

type locationServiceClient struct {
	cc *grpc.ClientConn
}

func NewLocationServiceClient(cc *grpc.ClientConn) LocationServiceClient {
	return &locationServiceClient{cc}
}

func (c *locationServiceClient) TrackUser(ctx context.Context, in *User, opts ...grpc.CallOption) (LocationService_TrackUserClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_LocationService_serviceDesc.Streams[0], c.cc, "/LocationService/TrackUser", opts...)
	if err != nil {
		return nil, err
	}
	x := &locationServiceTrackUserClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type LocationService_TrackUserClient interface {
	Recv() (*Point, error)
	grpc.ClientStream
}

type locationServiceTrackUserClient struct {
	grpc.ClientStream
}

func (x *locationServiceTrackUserClient) Recv() (*Point, error) {
	m := new(Point)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for LocationService service

type LocationServiceServer interface {
	TrackUser(*User, LocationService_TrackUserServer) error
}

func RegisterLocationServiceServer(s *grpc.Server, srv LocationServiceServer) {
	s.RegisterService(&_LocationService_serviceDesc, srv)
}

func _LocationService_TrackUser_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(User)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(LocationServiceServer).TrackUser(m, &locationServiceTrackUserServer{stream})
}

type LocationService_TrackUserServer interface {
	Send(*Point) error
	grpc.ServerStream
}

type locationServiceTrackUserServer struct {
	grpc.ServerStream
}

func (x *locationServiceTrackUserServer) Send(m *Point) error {
	return x.ServerStream.SendMsg(m)
}

var _LocationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "LocationService",
	HandlerType: (*LocationServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "TrackUser",
			Handler:       _LocationService_TrackUser_Handler,
			ServerStreams: true,
		},
	},
	Metadata: fileDescriptor0,
}

func init() { proto.RegisterFile("locationservice.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 153 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x12, 0xcd, 0xc9, 0x4f, 0x4e,
	0x2c, 0xc9, 0xcc, 0xcf, 0x2b, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f,
	0xc9, 0x57, 0x72, 0xe4, 0x62, 0x0d, 0xc8, 0xcf, 0xcc, 0x2b, 0x11, 0x92, 0xe2, 0xe2, 0xc8, 0x49,
	0x2c, 0xc9, 0x2c, 0x29, 0x4d, 0x49, 0x95, 0x60, 0x54, 0x60, 0xd4, 0x60, 0x0d, 0x82, 0xf3, 0x85,
	0x64, 0xb8, 0x38, 0x73, 0xf2, 0xf3, 0xd2, 0x21, 0x92, 0x4c, 0x60, 0x49, 0x84, 0x80, 0x92, 0x1c,
	0x17, 0x4b, 0x68, 0x71, 0x6a, 0x91, 0x90, 0x18, 0x17, 0x5b, 0x69, 0x71, 0x6a, 0x91, 0xa7, 0x0b,
	0x54, 0x3f, 0x94, 0x67, 0x64, 0xc8, 0xc5, 0xef, 0x03, 0xb5, 0x3b, 0x18, 0x62, 0xb7, 0x90, 0x1c,
	0x17, 0x67, 0x48, 0x51, 0x62, 0x72, 0x36, 0x58, 0x1f, 0xab, 0x1e, 0x88, 0x92, 0x62, 0xd3, 0x03,
	0x3b, 0x44, 0x89, 0xc1, 0x80, 0x31, 0x89, 0x0d, 0xec, 0x38, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff,
	0xff, 0xcb, 0xf8, 0xd3, 0x6a, 0xb5, 0x00, 0x00, 0x00,
}
